package components

import "Corap-web/models"
import "strconv"

templ Device(device models.Device) {
	@Main() {
		<div class="py-2 inline-block sm:px-6 lg:px-8">
			<div class="lg:flex lg:items-center lg:justify-between rounded p-2 shadow-md">
				<div class="min-w-0 flex-1">
					<h2
 						class="text-2xl font-bold leading-7 text-gray-900 sm:truncate sm:text-3xl sm:tracking-tight"
					>
						{ device.Name }
						<a
 							href={ templ.URL("https://education.thingsflow.eu/IAQ/DeviceByQR?hashedname=" + device.Hashedname) }
 							target="_blank"
 							class="align-middle inline-block"
						>
							<svg
 								xmlns="http://www.w3.org/2000/svg"
 								fill="none"
 								viewBox="0 0 24 24"
 								stroke-width="1.5"
 								stroke="currentColor"
 								class="w-6 h-6"
							>
								<path
 									stroke-linecap="round"
 									stroke-linejoin="round"
 									d="M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25"
								></path>
							</svg>
						</a>
					</h2>
					<div
 						class="mt-1 flex flex-col sm:mt-0 sm:flex-row sm:flex-wrap sm:space-x-6"
					>
						<div class="mt-2 flex items-center text-sm text-gray-500">
							<svg
 								xmlns="http://www.w3.org/2000/svg"
 								fill="none"
 								viewBox="0 0 24 24"
 								stroke-width="1.5"
 								stroke="currentColor"
 								class="mr-1.5 h-5 w-5 flex-shrink-0 text-gray-400"
							>
								<path
 									stroke-linecap="round"
 									stroke-linejoin="round"
 									d="M8.25 3v1.5M4.5 8.25H3m18 0h-1.5M4.5 12H3m18 0h-1.5m-15 3.75H3m18 0h-1.5M8.25 19.5V21M12 3v1.5m0 15V21m3.75-18v1.5m0 15V21m-9-1.5h10.5a2.25 2.25 0 002.25-2.25V6.75a2.25 2.25 0 00-2.25-2.25H6.75A2.25 2.25 0 004.5 6.75v10.5a2.25 2.25 0 002.25 2.25zm.75-12h9v9h-9v-9z"
								></path>
							</svg>
							{ device.Deveui }
						</div>
						<div class="mt-2 flex items-center text-sm text-gray-500">
							<svg
 								xmlns="http://www.w3.org/2000/svg"
 								height="24"
 								viewBox="0 -960 960 960"
 								viewBox="0 -960 960 960"
 								class="mr-1.5 h-5 w-5 flex-shrink-0 text-gray-400"
 								fill="currentColor"
 								width="24"
							>
								<path
 									d="M480-80q-83 0-141.5-58.5T280-280q0-48 21-89.5t59-70.5v-320q0-50 35-85t85-35q50 0 85 35t35 85v320q38 29 59 70.5t21 89.5q0 83-58.5 141.5T480-80Zm-40-440h80v-40h-40v-40h40v-80h-40v-40h40v-40q0-17-11.5-28.5T480-800q-17 0-28.5 11.5T440-760v240Z"
								></path>
							</svg>
							{ strconv.FormatFloat(float64(device.Temp), 'f', -1, 32) } Â°C
						</div>
						<div class="mt-2 flex items-center text-sm text-gray-500">
							<svg
 								xmlns="http://www.w3.org/2000/svg"
 								height="24"
 								viewBox="0 -960 960 960"
 								class="mr-1.5 h-5 w-5 flex-shrink-0 text-gray-400"
 								fill="currentColor"
 								width="24"
							>
								<path
 									d="M440-360q-17 0-28.5-11.5T400-400v-160q0-17 11.5-28.5T440-600h120q17 0 28.5 11.5T600-560v160q0 17-11.5 28.5T560-360H440Zm20-60h80v-120h-80v120Zm-300 60q-17 0-28.5-11.5T120-400v-160q0-17 11.5-28.5T160-600h120q17 0 28.5 11.5T320-560v40h-60v-20h-80v120h80v-20h60v40q0 17-11.5 28.5T280-360H160Zm520 120v-100q0-17 11.5-28.5T720-380h80v-40H680v-60h140q17 0 28.5 11.5T860-440v60q0 17-11.5 28.5T820-340h-80v40h120v60H680Z"
								></path>
							</svg>
							{  strconv.Itoa(device.Co2) } PPM
						</div>
						<div class="mt-2 flex items-center text-sm text-gray-500">
							<svg
 								class="mr-1.5 h-5 w-5 flex-shrink-0 text-gray-400"
 								xmlns="http://www.w3.org/2000/svg"
 								height="24"
 								viewBox="0 -960 960 960"
 								fill="currentColor"
 								width="24"
							>
								<path
 									d="M580-240q25 0 42.5-17.5T640-300q0-25-17.5-42.5T580-360q-25 0-42.5 17.5T520-300q0 25 17.5 42.5T580-240Zm-202-2 260-260-56-56-260 260 56 56Zm2-198q25 0 42.5-17.5T440-500q0-25-17.5-42.5T380-560q-25 0-42.5 17.5T320-500q0 25 17.5 42.5T380-440ZM480-80q-137 0-228.5-94T160-408q0-100 79.5-217.5T480-880q161 137 240.5 254.5T800-408q0 140-91.5 234T480-80Zm0-80q104 0 172-70.5T720-408q0-73-60.5-165T480-774Q361-665 300.5-573T240-408q0 107 68 177.5T480-160Zm0-320Z"
								></path>
							</svg>
							{  strconv.Itoa(device.Humidity)   } %
						</div>
					</div>
				</div>
			</div>
			<div class="shadow-md mt-6 p-2 rounded">
				<label for="time-range">Select a Time Range:</label>
				<select name="range" id="time-range">
					<option value="1">24 hours</option>
					<option value="7">1 week</option>
					<option value="30">30 days</option>
					<option value="90">90 days</option>
				</select>
				<div class="text-base font-medium text-center border-b border-gray-200">
					<ul class="flex flex-wrap -mb-px">
						<li class="mr-2">
							<button
 								class="tab-button inline-block p-2 border-b-2 border-transparent rounded-t-lg hover:text-gray-800 hover:border-cyan-500"
 								id="init-tab"
 								onclick="openTab(event, &#39;temp&#39;)"
							>
								Temperature
							</button>
						</li>
						<li class="mr-2">
							<button
 								class="tab-button inline-block p-2 border-b-2 border-transparent rounded-t-lg hover:text-gray-800 hover:border-cyan-500"
 								onclick="openTab(event, &#39;co2&#39;)"
							>
								Co2
							</button>
						</li>
						<li class="mr-2">
							<button
 								class="tab-button inline-block p-2 border-b-2 border-transparent rounded-t-lg hover:text-gray-800 hover:border-cyan-500"
 								onclick="openTab(event, &#39;humidity&#39;)"
							>
								Humidity
							</button>
						</li>
					</ul>
				</div>
				<hr/>
				<div style="width: 800px; height: 450px;" class="ind htmx-indicator items-center justify-center">
					<div class="loader border-cyan-500"></div>
				</div>
				<div
 					id="temp"
 					class="tab-content htmx-reverse-indicator ind"
 					hx-get={ "/devices/" + device.Deveui + "/plot/line/temp" }
 					hx-include="[name=range]"
 					hx-trigger="load, change from:#time-range"
 					hx-indicator=".ind"
 					style="width: 800px; height: 450px; display: none"
				></div>
				<div
 					id="co2"
 					class="tab-content htmx-reverse-indicator ind"
 					hx-get={ "/devices/" + device.Deveui + "/plot/line/co2" }
 					hx-include="[name=range]"
 					hx-trigger="load, change from:#time-range"
 					hx-indicator=".ind"
 					style="width: 800px; height: 450px; display: none"
				></div>
				<div
 					id="humidity"
 					class="tab-content htmx-reverse-indicator ind"
 					hx-get={ "/devices/" + device.Deveui + "/plot/line/humidity" }
 					hx-include="[name=range]"
 					hx-trigger="load, change from:#time-range"
 					hx-indicator=".ind"
 					style="width: 800px; height: 450px; display: none"
				></div>
			</div>
			// <div class="p-2 rounded shadow-md">
			// 	<div
			// 		id="humidity"
			// 		class="tab-content2"
			// 		hx-get={ "/devices/" + device.Deveui + "/plot/heatmap/co2" }
			// 		hx-trigger="load, change from:#time-range"
			// 		style="width: 800px; height: 450px"
			// 	></div>
			// </div>
		</div>
		<script>
			function openTab(event, tabName) {
				let i;
				let tabContent;
				const selectedStyle = "border-cyan-500";
				const notSelectedStyle = "border-transparent";
				tabButtons = document.getElementsByClassName("tab-button");
				for (i = 0; i < tabButtons.length; i++) {
				tabButtons[i].classList.remove(selectedStyle);
				tabButtons[i].classList.add(notSelectedStyle);
				}
				event.target.classList.add(selectedStyle);
				event.target.classList.remove(notSelectedStyle);

				tabContent = document.getElementsByClassName("tab-content");

				for (i = 0; i < tabContent.length; i++) {
				tabContent[i].style.display = "none";
				}

				document.getElementById(tabName).style.display = "block";
			}
			document.getElementById("init-tab").click();
		</script>
	}
}
